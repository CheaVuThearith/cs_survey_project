# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
from pathlib import Path
import pymysql.cursors

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Button, PhotoImage

from sql_credentials import get_creds

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"red_assets/frame0")


def reservation_add(window, TableID):
    def relative_to_assets(path: str) -> Path:
        return ASSETS_PATH / Path(path)

    canvas = Canvas(
        window,
        bg="#fbfbfb",
        height=540,
        width=960,
        bd=0,
        highlightthickness=0,
        relief="ridge",
    )

    window.configure(bg="#D9D9D9")

    canvas.place(x=0, y=0)
    entry_image_1 = PhotoImage(file=relative_to_assets("entry_1.png"))
    entry_bg_1 = canvas.create_image(200.5, 186.5, image=entry_image_1)
    entry_1 = Entry(bd=0, bg="#FFFFFF", fg="#000716", highlightthickness=0)
    entry_1.place(x=47.5, y=167.0, width=306.0, height=37.0)

    entry_image_2 = PhotoImage(file=relative_to_assets("entry_2.png"))
    entry_bg_2 = canvas.create_image(612.5, 186.5, image=entry_image_2)
    entry_2 = Entry(bd=0, bg="#FFFFFF", fg="#000716", highlightthickness=0)
    entry_2.place(x=459.5, y=167.0, width=306.0, height=37.0)

    entry_image_3 = PhotoImage(file=relative_to_assets("entry_3.png"))
    entry_bg_3 = canvas.create_image(200.5, 278.5, image=entry_image_3)
    entry_3 = Entry(bd=0, bg="#FFFFFF", fg="#000716", highlightthickness=0)
    entry_3.place(x=47.5, y=259.0, width=306.0, height=37.0)

    entry_image_4 = PhotoImage(file=relative_to_assets("entry_4.png"))
    entry_bg_4 = canvas.create_image(612.5, 278.5, image=entry_image_4)
    entry_4 = Entry(bd=0, bg="#FFFFFF", fg="#000716", highlightthickness=0)
    entry_4.place(x=459.5, y=259.0, width=306.0, height=37.0)

    entry_image_5 = PhotoImage(file=relative_to_assets("entry_5.png"))
    entry_bg_5 = canvas.create_image(200.5, 370.5, image=entry_image_5)
    entry_5 = Entry(bd=0, bg="#FFFFFF", fg="#000716", highlightthickness=0)
    entry_5.place(x=47.5, y=351.0, width=306.0, height=37.0)

    def button_click():
        conn = None
        try:
            # CONNECT WITH MYSQL DATABASE
            conn = pymysql.connect(
                host="127.0.0.1", user="root", password=get_creds(), db="cs_survey"
            )

        except Exception as ex:
            print("PROBLEM WITH Database Connection", ex)
        else:
            print("Database Connection SUCCESS")

        if conn is not None:
            # TAKE INPUT FROM USER FOR ALL COLUMNS
            Name = entry_1.get()
            PhoneNumber = entry_2.get()
            StartTime = entry_3.get()
            EndTime = entry_4.get()
            BookingDate = entry_5.get()
            with conn.cursor() as cursor:
                # CHECK IF NAME AND PHONE NUMBER ALREADY EXIST
                cursor.execute(
                    "SELECT CustomerID FROM Customers WHERE Name = %s AND PhoneNumber = %s",
                    (Name, PhoneNumber),
                )
                result = cursor.fetchone()

                if result:
                    existing_id = result[0]
                    print(
                        f"Record with Name '{Name}' and Phone number '{PhoneNumber}' already exists with ID: {existing_id}"
                    )
                else:
                    # INSERT ALL DETAILS INTO TABLE

                    command = """INSERT INTO Customers (Name, PhoneNumber)
                                    VALUES (%s, %s)"""
                    cursor.execute(command, (Name, PhoneNumber))

                cursor.execute(
                    "SELECT CustomerID FROM Customers WHERE Name = %s AND PhoneNumber = %s",
                    (Name, PhoneNumber),
                )
                result = cursor.fetchone()
                existing_id = result[0]

                command1 = """INSERT INTO Reservations (StartTime, EndTime, BookingDate, TableID, CustomerID)
                                VALUES (%s, %s, %s, %s, %s)"""
                cursor.execute(
                    command1,
                    (StartTime, EndTime, BookingDate, TableID, existing_id),
                )
                # GET THE LAST INSERTED ID
                last_id_query = "SELECT LAST_INSERT_ID()"
                cursor.execute(last_id_query)
                last_id = cursor.fetchone()[0]

                print(
                    f"New record INSERTED with Name '{Name}', Phone number '{PhoneNumber}', and ID: {last_id}"
                )
                cursor.execute(
                    f"update tables set Status = 'Reserved' where TableID = {TableID}"
                )
                conn.commit()

                # COMMIT THE DATABASE CHANGES

            conn.close()
            close_overlay()

    def close_overlay():
        x_button.destroy()
        button_1.destroy()
        entry_1.destroy()
        entry_2.destroy()
        entry_3.destroy()
        entry_4.destroy()
        entry_5.destroy()
        canvas.destroy()

    x_button_image = PhotoImage(file=relative_to_assets("Framexicon.png"))
    x_button = Button(
        image=x_button_image,
        borderwidth=0,
        background="#fbfbfb",
        highlightthickness=0,
        command=lambda: close_overlay(),
        relief="flat",
    )
    x_button.place(x=904, y=70, width=24, height=24)

    button_image_1 = PhotoImage(file=relative_to_assets("button_2.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: button_click(),
        relief="flat",
    )
    button_1.place(x=546.0, y=346.0, width=121.0, height=49.0)

    canvas.create_text(
        34.0,
        21.0,
        anchor="nw",
        text="Reservation",
        fill="#000000",
        font=("Inter Bold", 36 * -1),
    )

    canvas.create_text(
        34.0,
        135.0,
        anchor="nw",
        text="Customer’s Name",
        fill="#000000",
        font=("Inter Bold", 20 * -1),
    )

    canvas.create_text(
        440.0,
        135.0,
        anchor="nw",
        text="Customer’s Phone Number",
        fill="#000000",
        font=("Inter Bold", 20 * -1),
    )

    canvas.create_text(
        34.0,
        227.0,
        anchor="nw",
        text="Start Time",
        fill="#000000",
        font=("Inter Bold", 20 * -1),
    )

    canvas.create_text(
        34.0,
        313.0,
        anchor="nw",
        text="Booking Date",
        fill="#000000",
        font=("Inter Bold", 20 * -1),
    )

    canvas.create_text(
        440.0,
        227.0,
        anchor="nw",
        text="End Time",
        fill="#000000",
        font=("Inter Bold", 20 * -1),
    )

    window.mainloop()
